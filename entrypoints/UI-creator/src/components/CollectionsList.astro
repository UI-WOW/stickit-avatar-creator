---
import StickerGroupCard from '@/components/StickerGroupCard.astro';
const API_BASE = import.meta.env.PUBLIC_API_BASE || '/api';
---

<div id="collections-root" class="space-y-6">
    <div class="text-center text-gray-500" id="collections-loading">Loading your sticker groups...</div>
    <template id="sticker-card-template">
        <StickerGroupCard groupName="__NAME__" stickerCount={5} id="__ID__" createdAt="__CREATED__" showDelete={true} />
    </template>
</div>

<script>
    // @ts-nocheck
    const API_BASE = import.meta.env.PUBLIC_API_BASE || '';
    /** @type {HTMLElement|null} */
    const root = document.getElementById('collections-root');
    /** @type {HTMLElement|null} */
    const loading = document.getElementById('collections-loading');
    /** @type {HTMLTemplateElement | null} */
    const tpl = /** @type {HTMLTemplateElement | null} */ (document.getElementById('sticker-card-template'));

    /**
     * @param {string} html
     * @returns {Element|null}
     */
    function htmlToElement(html) {
        const template = document.createElement('template');
        template.innerHTML = html.trim();
        return template.content.firstElementChild;
    }

    /**
     * @param {Element} cardEl
     * @param {string} id
     */
    function bindDelete(cardEl, id) {
        const delBtn = cardEl.querySelector('[data-action="delete"]');
        if (!delBtn) return;
        delBtn.addEventListener('click', async () => {
            if (!confirm('Delete this collection?')) return;
            try {
                const r = await fetch(`${API_BASE}/sticker-groups/${id}`, { method: 'DELETE', credentials: 'include' });
                if (!r.ok) throw new Error('Delete failed');
                cardEl.remove();
            } catch (e) {
                alert('Failed to delete');
                console.error(e);
            }
        });
    }

    async function loadCollections() {
        if (!root) return;
        try {
            const url = `${API_BASE}/sticker-groups`;
            const res = await fetch(url, { credentials: 'include' });
            if (!res.ok) {
                const t = await res.text().catch(() => '');
                throw new Error(`Request failed (${res.status}): ${t}`);
            }
            const data = await res.json();
            const items = Array.isArray(data?.items) ? data.items : [];

            if (loading) loading.remove();

            if (items.length === 0) {
                const empty = document.createElement('div');
                empty.className = 'text-center text-gray-500';
                empty.textContent = 'No sticker groups yet. Create your first group to get started!';
                root.appendChild(empty);
                return;
            }

            const list = document.createElement('div');
            list.className = 'grid grid-cols-1 gap-4';

            for (const col of items) {
                const raw = (tpl?.innerHTML || '')
                    .replaceAll('__ID__', String(col.id ?? ''))
                    .replaceAll('__NAME__', String(col.name ?? 'Untitled'))
                    .replaceAll('__CREATED__', String(col.createdAt ?? Date.now()));
                const cardEl = htmlToElement(raw);
                if (cardEl) {
                    bindDelete(cardEl, col.id);
                    list.appendChild(cardEl);
                }
            }

            root.appendChild(list);
        } catch (err) {
            if (loading) loading.remove();
            if (root) {
                const e = document.createElement('div');
                e.className = 'text-center text-red-600';
                e.textContent = 'Failed to load collections.';
                root.appendChild(e);
            }
            console.error(err);
        }
    }

    loadCollections();
</script>


