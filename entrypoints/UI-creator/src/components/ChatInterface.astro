---
// Phone-like chat interface component
---

<div class="relative">
	<!-- Desktop: Phone Frame -->
	<div class="hidden md:block w-80 h-[600px] bg-gray-900 rounded-[3rem] p-2 shadow-2xl">
		<!-- Phone Screen -->
		<div class="w-full h-full bg-white rounded-[2.5rem] overflow-hidden relative">
			<!-- Status Bar -->
			<div class="h-8 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-between px-6 text-white text-xs font-medium">
				<span>9:41</span>
				<span>Sticker Chat</span>
				<div class="flex items-center space-x-1">
					<div class="w-4 h-2 bg-white rounded-sm"></div>
					<div class="w-4 h-2 bg-white rounded-sm"></div>
					<div class="w-4 h-2 bg-white rounded-sm"></div>
				</div>
			</div>
			
			<!-- Chat Header -->
			<div class="h-16 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center px-4 text-white">
				<div class="flex items-center space-x-3">
					<div class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">
						<img src="/dummy-sticker.webp" alt="AI Assistant" class="w-8 h-8 rounded-lg" />
					</div>
					<div>
						<h3 class="font-semibold">Tech Assistant</h3>
						<p class="text-xs text-white/80">Online</p>
					</div>
				</div>
			</div>
			
			<!-- Chat Messages Area -->
			<div class="h-[420px] overflow-y-auto p-4 space-y-4 bg-gray-50" id="chat-messages">
				<!-- Welcome Message -->
				<div class="flex items-start space-x-2">
					<div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
						<img src="/dummy-sticker.webp" alt="AI" class="w-6 h-6 rounded" />
					</div>
					<div class="bg-white rounded-2xl rounded-tl-sm px-4 py-3 shadow-sm max-w-[200px]">
						<p class="text-sm text-gray-800">Hi! I'm your Tech Assistant. How can I help you today? ðŸš€</p>
					</div>
				</div>
				
				<!-- Sticker Response Example -->
				<div class="flex items-start space-x-2">
					<div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
						<img src="/dummy-sticker.webp" alt="AI" class="w-6 h-6 rounded" />
					</div>
					<div class="bg-white rounded-2xl rounded-tl-sm px-4 py-3 shadow-sm max-w-[200px]">
						<p class="text-sm text-gray-800 mb-2">Great question! Let me show you something cool:</p>
						<div class="flex justify-center">
							<img src="/dummy-sticker.webp" alt="Sticker response" class="w-16 h-16 rounded-lg" />
						</div>
					</div>
				</div>
			</div>
			
			<!-- Input Area -->
			<div class="h-16 bg-white border-t border-gray-200 flex items-center px-4 space-x-3">
				<button class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors">
					<svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
					</svg>
				</button>
				<div class="flex-1 bg-gray-100 rounded-full px-4 py-2">
					<input 
						type="text" 
						placeholder="Type a message..." 
						class="w-full bg-transparent text-sm outline-none"
						id="message-input"
					/>
				</div>
				<button 
					class="w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center hover:from-indigo-600 hover:to-purple-700 transition-all"
					id="send-button"
				>
					<svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 12h16m0 0l-6-6m6 6l-6 6"></path>
					</svg>
				</button>
			</div>
		</div>
	</div>
	
	<!-- Mobile: Full-Screen Chat Interface -->
	<div class="md:hidden fixed inset-0 bg-white flex flex-col">
		<!-- Chat Header -->
		<div class="h-16 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center px-4 text-white flex-shrink-0">
			<div class="flex items-center space-x-3">
				<a href="/" class="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center hover:bg-white/30 transition-colors">
					<svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
					</svg>
				</a>
				<div class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">
					<img src="/dummy-sticker.webp" alt="AI Assistant" class="w-8 h-8 rounded-lg" />
				</div>
				<div>
					<h3 class="font-semibold">Tech Assistant</h3>
					<p class="text-xs text-white/80">Online</p>
				</div>
			</div>
		</div>
		
		<!-- Chat Messages Area (Mobile) - Takes most space -->
		<div class="flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50" id="chat-messages-mobile">
			<!-- Welcome Message -->
			<div class="flex items-start space-x-2">
				<div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
					<img src="/dummy-sticker.webp" alt="AI" class="w-6 h-6 rounded" />
				</div>
				<div class="bg-white rounded-2xl rounded-tl-sm px-4 py-3 shadow-sm max-w-[280px]">
					<p class="text-sm text-gray-800">Hi! I'm your Tech Assistant. How can I help you today? ðŸš€</p>
				</div>
			</div>
			
			<!-- Sticker Response Example -->
			<div class="flex items-start space-x-2">
				<div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
					<img src="/dummy-sticker.webp" alt="AI" class="w-6 h-6 rounded" />
				</div>
				<div class="bg-white rounded-2xl rounded-tl-sm px-4 py-3 shadow-sm max-w-[280px]">
					<p class="text-sm text-gray-800 mb-2">Great question! Let me show you something cool:</p>
					<div class="flex justify-center">
						<img src="/dummy-sticker.webp" alt="Sticker response" class="w-16 h-16 rounded-lg" />
					</div>
				</div>
			</div>
		</div>
		
		<!-- Sticker Collection (Mobile) - Compact at bottom -->
		<div class="bg-white border-t border-gray-200 p-3 flex-shrink-0">
			<div class="flex gap-2 overflow-x-auto">
				{Array.from({ length: 8 }).map((_, i) => (
					<div class="w-10 h-10 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-lg flex items-center justify-center shadow-sm flex-shrink-0">
						<img src="/dummy-sticker.webp" alt={`Sticker ${i + 1}`} class="w-7 h-7 rounded" />
					</div>
				))}
			</div>
		</div>
		
		<!-- Input Area (Mobile) -->
		<div class="h-16 bg-white border-t border-gray-200 flex items-center px-4 space-x-3 flex-shrink-0">
			<button class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors">
				<svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
				</svg>
			</button>
			<div class="flex-1 bg-gray-100 rounded-full px-4 py-2">
				<input 
					type="text" 
					placeholder="Type a message..." 
					class="w-full bg-transparent text-sm outline-none"
					id="message-input-mobile"
				/>
			</div>
			<button 
				class="w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center hover:from-indigo-600 hover:to-purple-700 transition-all"
				id="send-button-mobile"
			>
				<svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
				</svg>
			</button>
		</div>
	</div>
	
	<!-- Desktop: Sticker Collection Display -->
	<div class="hidden md:block absolute -right-32 top-8 space-y-3">
		<div class="text-center mb-4">
			<h4 class="text-sm font-semibold text-gray-700">Available Stickers</h4>
		</div>
		<div class="grid grid-cols-2 gap-3">
			{Array.from({ length: 8 }).map((_, i) => (
				<div class="w-12 h-12 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-xl flex items-center justify-center shadow-md hover:scale-110 transition-transform duration-200">
					<img src="/dummy-sticker.webp" alt={`Sticker ${i + 1}`} class="w-8 h-8 rounded-lg" />
				</div>
			))}
		</div>
	</div>
</div>

<script>
	// Dummy chatbot responses
	const responses = [
		{
			text: "That's interesting! Let me help you with that.",
			hasSticker: false
		},
		{
			text: "I understand! Here's what I think:",
			hasSticker: true
		},
		{
			text: "Great question! Let me show you something cool:",
			hasSticker: true
		},
		{
			text: "Absolutely! I can help you with that.",
			hasSticker: false
		},
		{
			text: "Perfect! Here's my response:",
			hasSticker: true
		},
		{
			text: "I see what you mean. Let me explain:",
			hasSticker: false
		}
	];
	
	const chatMessages = document.getElementById('chat-messages') as HTMLElement;
	const messageInput = document.getElementById('message-input') as HTMLInputElement;
	const sendButton = document.getElementById('send-button') as HTMLElement;
	
	// Mobile elements
	const chatMessagesMobile = document.getElementById('chat-messages-mobile') as HTMLElement;
	const messageInputMobile = document.getElementById('message-input-mobile') as HTMLInputElement;
	const sendButtonMobile = document.getElementById('send-button-mobile') as HTMLElement;
	
	function addMessage(text: string, isUser = false, hasSticker = false) {
		const messageDiv = document.createElement('div');
		messageDiv.className = `flex items-start space-x-2 ${isUser ? 'flex-row-reverse space-x-reverse' : ''}`;
		
		if (isUser) {
			messageDiv.innerHTML = `
				<div class="bg-gradient-to-r from-indigo-500 to-purple-600 rounded-2xl rounded-tr-sm px-4 py-3 shadow-sm max-w-[280px] md:max-w-[200px]">
					<p class="text-sm text-white">${text}</p>
				</div>
			`;
		} else {
			messageDiv.innerHTML = `
				<div class="w-8 h-8 bg-gradient-to-br from-indigo-100 to-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
					<img src="/dummy-sticker.webp" alt="AI" class="w-6 h-6 rounded" />
				</div>
				<div class="bg-white rounded-2xl rounded-tl-sm px-4 py-3 shadow-sm max-w-[280px] md:max-w-[200px]">
					<p class="text-sm text-gray-800">${text}</p>
					${hasSticker ? '<div class="flex justify-center mt-2"><img src="/dummy-sticker.webp" alt="Sticker response" class="w-16 h-16 rounded-lg" /></div>' : ''}
				</div>
			`;
		}
		
		// Add to both desktop and mobile chat areas
		chatMessages?.appendChild(messageDiv.cloneNode(true));
		chatMessagesMobile?.appendChild(messageDiv);
		
		// Scroll both areas
		chatMessages!.scrollTop = chatMessages!.scrollHeight;
		chatMessagesMobile!.scrollTop = chatMessagesMobile!.scrollHeight;
	}
	
	function sendMessage() {
		// Get message from either desktop or mobile input
		const message = messageInput?.value.trim() || messageInputMobile?.value.trim();
		if (!message) return;
		
		// Add user message
		addMessage(message, true);
		
		// Clear both inputs
		messageInput!.value = '';
		messageInputMobile!.value = '';
		
		// Simulate typing delay
		setTimeout(() => {
			const response = responses[Math.floor(Math.random() * responses.length)];
			addMessage(response.text, false, response.hasSticker);
		}, 1000 + Math.random() * 2000);
	}
	
	// Desktop event listeners
	sendButton?.addEventListener('click', sendMessage);
	messageInput?.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') {
			sendMessage();
		}
	});
	
	// Mobile event listeners
	sendButtonMobile?.addEventListener('click', sendMessage);
	messageInputMobile?.addEventListener('keypress', (e) => {
		if (e.key === 'Enter') {
			sendMessage();
		}
	});
</script>
