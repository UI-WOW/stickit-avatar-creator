---
import { Button } from '@/components/ui/button';
---

<div class="flex justify-center py-8">
  <Button 
    id="create-group"
    size="lg" 
    className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-4 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
  >
    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
    </svg>
    Create New Sticker Group
  </Button>
</div>

<!-- Modal -->
<div id="create-modal" class="fixed inset-0 bg-black/40 hidden items-center justify-center p-4">
  <div class="w-full max-w-md rounded-xl bg-white p-6 shadow-xl">
    <h3 class="text-xl font-semibold text-gray-800">Create a new sticker group</h3>
    <p class="text-sm text-gray-500 mt-1">Give your sticker group a name.</p>
    <input id="collection-name" class="mt-4 w-full rounded-md border px-3 py-2 outline-none focus:ring-2 focus:ring-blue-500" placeholder="e.g. Tech Assistant" />
    <div class="mt-6 flex justify-end gap-3">
      <button id="cancel-create" class="px-4 py-2 rounded-md border text-gray-700 hover:bg-gray-50">Cancel</button>
      <button id="confirm-create" class="px-4 py-2 rounded-md bg-blue-600 text-white hover:bg-blue-700">Create</button>
    </div>
  </div>
  </div>

<script>
  const API_BASE = import.meta.env.PUBLIC_API_BASE || '/api';
  const btn = document.getElementById('create-group');
  const modal = document.getElementById('create-modal');
  const input = document.getElementById('collection-name');
  const cancelBtn = document.getElementById('cancel-create');
  const confirmBtn = document.getElementById('confirm-create');

  function openModal() {
    modal?.classList.remove('hidden');
    modal?.classList.add('flex');
    setTimeout(() => { if (input instanceof HTMLInputElement) input.focus(); }, 0);
  }
  function closeModal() {
    modal?.classList.add('hidden');
    modal?.classList.remove('flex');
    if (input instanceof HTMLInputElement) input.value = '';
  }

  btn?.addEventListener('click', () => openModal());
  cancelBtn?.addEventListener('click', () => closeModal());
  modal?.addEventListener('click', (e) => { if (e.target === modal) closeModal(); });
  confirmBtn?.addEventListener('click', async () => {
    const name = input instanceof HTMLInputElement ? input.value.trim() : '';
    try {
      // 1) Create the group
      const res = await fetch(`${API_BASE}/sticker-groups`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify({ name: name || 'Untitled' })
      });
      if (!res.ok) {
        const t = await res.text().catch(() => '');
        throw new Error(`Failed to create: ${res.status} ${t}`);
      }
      const created = await res.json();

      // 2) Initialize with dummy starter data (single unified payload)
      if (created?.id) {
        const starter = {
          name: created.name || (name || 'Nano Banana Buddy'),
          input: {
            brandIdentity: {
              avatarType: 'Entertainment Bot',
              avatarDescription: 'A super fun and energetic banana character that brings joy and excitement to the Nano Banana Hackathon! This little banana buddy is here to cheer you on, celebrate your wins, and make coding feel like a party! 🍌✨',
              personalityTraits: ['Fun', 'Energetic', 'Encouraging']
            },
            avatarCreation: {
              description: 'A simple, cute banana sticker - just a regular banana with a bright yellow color, maybe with some fun expressions or poses. Perfect for the Nano Banana Hackathon! Keep it simple and fun - just a banana being a banana! 🍌',
              personality: 'Energetic Enthusiast',
              colorPalette: {
                primary: '#FFD700', // Bright banana yellow
                secondary: '#32CD32', // Fresh green (banana leaf)
                accent: '#FF6B35', // Vibrant orange (banana tip)
                neutral: '#8B4513' // Brown (banana spots)
              },
              referenceImages: [],
              generatedAvatar: null
            },
            stickerGeneration: {}
          }
        };
        await fetch(`${API_BASE}/sticker-groups/${created.id}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include',
          body: JSON.stringify(starter)
        }).catch(() => {});
      }

      closeModal();
      if (created?.id) {
        window.location.href = `/create?groupId=${encodeURIComponent(created.id)}`;
        return;
      }
      // Fallback to reload if id missing
      location.reload();
    } catch (e) {
      console.error('Create group error', e);
      alert('Could not create sticker group');
    }
  });
  </script>
