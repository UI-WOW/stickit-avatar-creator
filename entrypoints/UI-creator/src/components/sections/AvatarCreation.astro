---
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardFooter } from '@/components/ui/card';
---

<Card class="border-0 shadow-lg bg-gradient-to-br from-white to-gray-50 hover:shadow-xl transition-all duration-300">
	<CardHeader class="pb-4">
		<div class="flex items-center space-x-3">
			<div class="w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-sm">2</div>
			<h2 class="text-2xl font-bold text-gray-800">Avatar Creation</h2>
		</div>
		<p class="text-gray-600 mt-2">Design your AI assistant's personality and appearance</p>
	</CardHeader>
	<CardContent class="space-y-8">
		<!-- Character Description -->
		<div class="space-y-4">
			<label class="text-sm font-medium text-gray-700">Describe your ideal avatar *</label>
			<p class="text-sm text-gray-500">Be creative! Describe what your AI assistant should look like and act like</p>
			<textarea 
				placeholder="e.g., A friendly tech-savvy sloth wearing glasses, or a professional robot with a warm smile, or a helpful wizard who loves solving problems..."
				class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent outline-none transition-all h-24 resize-none hover:border-gray-300"
				id="avatarDescription"
			>A friendly tech-savvy sloth wearing glasses and a blue hoodie, who loves helping people with technology and always has a warm, encouraging smile.</textarea>
		</div>

		<div class="grid md:grid-cols-2 gap-8">
			<!-- Upload Section -->
			<div class="space-y-4">
				<h3 class="text-lg font-semibold text-gray-800">Reference Images (Optional)</h3>
				<p class="text-sm text-gray-500">Upload images that inspire your avatar design</p>
				<div class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-indigo-400 hover:bg-indigo-50 transition-all duration-300 cursor-pointer group" id="uploadArea">
					<svg class="w-12 h-12 text-gray-400 mx-auto mb-4 group-hover:text-indigo-500 transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
					</svg>
					<p class="text-gray-600 mb-2 group-hover:text-indigo-600 transition-colors duration-300">Drag & drop images here</p>
					<p class="text-sm text-gray-500 group-hover:text-indigo-500 transition-colors duration-300">or click to browse</p>
				</div>
				<div class="text-sm text-gray-500">
					<p>â€¢ Character references, mascots, or style inspiration</p>
					<p>â€¢ Supported formats: JPG, PNG, SVG</p>
					<p>â€¢ Max file size: 10MB per image</p>
				</div>
			</div>
			
			<!-- Avatar Preview -->
			<div class="space-y-4">
				<h3 class="text-lg font-semibold text-gray-800">Avatar Preview</h3>
				<div class="bg-gradient-to-br from-indigo-100 to-purple-100 rounded-2xl p-8 text-center">
					<div class="w-32 h-32 mx-auto bg-white rounded-2xl shadow-lg flex items-center justify-center mb-4">
						<img src="/dummy-sticker.webp" alt="Generated Avatar" class="w-24 h-24 rounded-xl" />
					</div>
					<p class="text-sm text-gray-600 mb-2">Your AI assistant avatar</p>
					<p class="text-xs text-gray-500">Based on your description and brand</p>
					<Button variant="outline" size="sm" class="mt-3" id="regenerateAvatar">
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
						</svg>
						Regenerate Avatar
					</Button>
				</div>
			</div>
		</div>

		<!-- Style Preferences -->
		<div class="space-y-4">
			<label class="text-sm font-medium text-gray-700">Sticker Style Preferences</label>
			<p class="text-sm text-gray-500">Choose the visual style for your stickers, or skip if you've already specified it in your description</p>
			<div class="grid grid-cols-2 md:grid-cols-5 gap-4" id="styleSelection">
				{[
					{ name: 'No specific style', icon: 'ðŸŽ¯', selected: false, description: 'Use description/image style' },
					{ name: 'Cartoon', icon: 'ðŸŽ¨', selected: true, description: 'Fun and playful' },
					{ name: 'Minimalist', icon: 'âšª', selected: false, description: 'Clean and simple' },
					{ name: 'Realistic', icon: 'ðŸ“¸', selected: false, description: 'Detailed and lifelike' },
					{ name: 'Abstract', icon: 'ðŸŒ€', selected: false, description: 'Creative and unique' }
				].map((style) => (
					<button 
						class={`p-4 rounded-lg border-2 transition-all text-center hover:scale-105 transform ${
							style.selected 
								? 'border-indigo-500 bg-indigo-50 text-indigo-700 shadow-md' 
								: 'border-gray-200 hover:border-gray-300 text-gray-600 hover:shadow-sm'
						}`}
						data-style={style.name}
					>
						<div class="text-2xl mb-2">{style.icon}</div>
						<div class="text-sm font-medium mb-1">{style.name}</div>
						<div class="text-xs text-gray-500">{style.description}</div>
					</button>
				))}
			</div>
		</div>
	</CardContent>
</Card>

<!-- Save Button Outside Card -->
<div class="flex justify-end mt-6">
	<button 
		class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-lg font-semibold transition-all disabled:pointer-events-none disabled:opacity-50 px-8 py-4 bg-purple-600 hover:bg-purple-700 text-white shadow-lg hover:shadow-xl transform hover:scale-105 duration-200"
		id="saveAvatarDesign"
	>
		<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
		</svg>
		Save Avatar Design
	</button>
</div>

<script is:inline>
	document.addEventListener('DOMContentLoaded', function() {
		// Style selection
		const styleButtons = document.querySelectorAll('[data-style]');
		styleButtons.forEach(button => {
			button.addEventListener('click', function() {
				// Remove selection from all buttons
				styleButtons.forEach(btn => {
					btn.classList.remove('border-indigo-500', 'bg-indigo-50', 'text-indigo-700', 'shadow-md');
					btn.classList.add('border-gray-200', 'text-gray-600');
				});
				
				// Add selection to clicked button
				this.classList.add('border-indigo-500', 'bg-indigo-50', 'text-indigo-700', 'shadow-md');
				this.classList.remove('border-gray-200', 'text-gray-600');
			});
		});

		// Regenerate avatar button
		const regenerateBtn = document.getElementById('regenerateAvatar');
		if (regenerateBtn) {
			regenerateBtn.addEventListener('click', function() {
				// Add loading state
				this.innerHTML = `
					<svg class="w-4 h-4 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
					</svg>
					Regenerating...
				`;
				
				// Simulate regeneration
				setTimeout(() => {
					this.innerHTML = `
						<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
						</svg>
						Regenerate Avatar
					`;
				}, 2000);
			});
		}

		// Save button
		const saveButton = document.getElementById('saveAvatarDesign');
		if (saveButton) {
			saveButton.addEventListener('click', function() {
				// Get form data
				const formData = {
					avatarDescription: document.getElementById('avatarDescription')?.value,
					selectedStyle: document.querySelector('[data-style].border-indigo-500')?.dataset.style
				};
				
				// Store in session storage
				sessionStorage.setItem('avatarCreation', JSON.stringify(formData));
				
				// Emit custom event to move to next step
				window.dispatchEvent(new CustomEvent('stepCompleted', { 
					detail: { step: 'avatarCreation', data: formData } 
				}));
			});
		}
	});
</script>
