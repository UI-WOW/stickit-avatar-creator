---
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import ChatInterface from '../ChatInterface.tsx';
const API_BASE = import.meta.env.PUBLIC_API_BASE || '';
---

<Card className="border-0 shadow-lg bg-gradient-to-br from-white to-gray-50 hover:shadow-xl transition-all duration-300">
	<CardHeader className="pb-4">
		<div class="flex items-center space-x-3">
			<div class="w-8 h-8 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-sm">4</div>
			<h2 class="text-2xl font-bold text-gray-800">See It In Action</h2>
		</div>
		<p class="text-gray-600 mt-2">Experience how your custom stickers come to life in real conversations</p>
	</CardHeader>
	<CardContent className="space-y-8">
		<!-- Chat Demo Section -->
		<div class="text-center mb-8">
			<h3 class="text-lg font-semibold text-gray-800 mb-2">Live Chat Demo</h3>
			<p class="text-sm text-gray-600">Try chatting with your AI assistant and see how it responds with your personalized stickers!</p>
		</div>

		<!-- Embedded Chat Interface -->
		<div class="flex justify-center my-8">
			<div class="relative">
				<!-- Desktop: Phone Frame -->
				<div class="hidden md:block w-80 h-[600px] bg-gray-900 rounded-[3rem] p-2 shadow-2xl">
					<!-- Phone Screen -->
					<div class="w-full h-full bg-white rounded-[2.5rem] overflow-hidden relative">
						<!-- Status Bar -->
						<div class="h-8 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-between px-6 text-white text-xs font-medium">
							<span>9:41</span>
							<span>Sticker Chat</span>
							<div class="flex items-center space-x-1">
								<div class="w-4 h-2 bg-white rounded-sm"></div>
								<div class="w-4 h-2 bg-white rounded-sm"></div>
								<div class="w-4 h-2 bg-white rounded-sm"></div>
							</div>
						</div>
						
						<!-- React Chat Component -->
						<div class="h-[calc(100%-2rem)]">
							<ChatInterface 
								apiBase={API_BASE}
								client:load
							/>
						</div>
					</div>
				</div>
				
				<!-- Mobile: Full-Screen Chat Interface -->
				<div class="md:hidden w-full h-[600px] bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden flex flex-col">
					<ChatInterface 
						apiBase={API_BASE}
						client:load
					/>
				</div>
			</div>
		</div>

		<!-- Demo Features -->
		<div class="grid md:grid-cols-3 gap-6 mt-12">
			<div class="text-center p-4 bg-gradient-to-br from-indigo-50 to-purple-50 rounded-xl">
				<div class="w-12 h-12 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-3">
					<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
					</svg>
				</div>
				<h4 class="font-semibold text-gray-800 mb-2">Real-time Responses</h4>
				<p class="text-sm text-gray-600">See how your AI assistant uses stickers to enhance conversations</p>
			</div>
			
			<div class="text-center p-4 bg-gradient-to-br from-green-50 to-blue-50 rounded-xl">
				<div class="w-12 h-12 bg-gradient-to-r from-green-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-3">
					<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
					</svg>
				</div>
				<h4 class="font-semibold text-gray-800 mb-2">Personalized Experience</h4>
				<p class="text-sm text-gray-600">Your brand personality and avatar design come to life</p>
			</div>
			
			<div class="text-center p-4 bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl">
				<div class="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-full flex items-center justify-center mx-auto mb-3">
					<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
					</svg>
				</div>
				<h4 class="font-semibold text-gray-800 mb-2">Smart Context</h4>
				<p class="text-sm text-gray-600">Stickers appear based on conversation context and mood</p>
			</div>
		</div>
	</CardContent>
</Card>

<!-- Action Buttons Outside Card -->
<div class="flex justify-between items-center mt-6">
	<div class="flex gap-3">
		<Button variant="outline" className="px-6 py-3">
			<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
			</svg>
			Download Collection
		</Button>
		<Button variant="outline" className="px-6 py-3">
			<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
			</svg>
			Share Collection
		</Button>
	</div>
</div>

<!-- Go Back Button -->
<div class="flex justify-center mt-8">
	<button 
		class="cursor-pointer inline-flex items-center justify-center gap-2 px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors duration-200"
		id="goBackSeeItInAction"
	>
		<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
			<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
		</svg>
		Back to Sticker Generation
	</button>
</div>

<script is:inline>
	// Simple script to handle the go back button
	document.addEventListener('DOMContentLoaded', function() {
		const goBackButton = document.getElementById('goBackSeeItInAction');
		if (goBackButton) {
			goBackButton.addEventListener('click', function() {
				// Emit custom event to go back
				window.dispatchEvent(new CustomEvent('goBack', { 
					detail: { fromStep: 'seeItInAction' } 
				}));
			});
		}
	});
</script>
